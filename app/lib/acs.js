	// @autogenerated:start:ti.cloud.Here
//var Here = require("ti.cloud.Here");
// @autogenerated:end:ti.cloud.Here
var LOCATION = require("location");

////////////////////////////////////////////////////
//
// THIS FILE CONTAINS ALL CALLS MADE TO ACS		   
//												   
////////////////////////////////////////////////////


var APP = require('core');
var Cloud = require('ti.cloud');

//Function to login user

function login(params, callback){
	Cloud.Users.login({
    	login: params.uname,
    	password: params.pwd,
		}, function (e) {
			
	    if (e.success) {
	        var user  = e.users[0];
	        APP.user.uname = user.custom_fields.displayName;
	        Ti.App.Properties.setString('uname', user.custom_fields.displayName);
	        APP.user.id = user.id;
	        Ti.API.info('after Login in success APP.user.id = '+ APP.user.id);
	        Ti.App.Properties.setString('uid',user.id);
	        APP.user.sessionID = e.meta.session_id;
	        Ti.App.Properties.setString('sessionID', e.meta.session_id);
	        Ti.API.info('session id:  '+e.meta.session_id);
	       	APP.user.email = user.email;
	       	Ti.App.Properties.setString('email', user.email);
	       	//APP.user.uname = user.displayName;
			if(callback){
				callback(APP.user.id);
			}
			
	    } else {
	    	
	        alert('Error:\\n' +
	            ((e.error && e.message) || JSON.stringify(e)));
	    }
	});
};

// Function to register a new user

exports.registerUser = function (params,callback){
		
	Cloud.Users.create({
    	username:params.username,
        email:params.username,
        password:params.pwd,
        password_confirmation:params.pwd,
        custom_fields: {"displayName": ""}
            
    }, function (e) {
    	if (e.success) {
	    	var user  = e.users[0];
		    APP.user.uname = user.custom_fields.displayName;
		    Ti.App.Properties.setString('uname', user.custom_fields.displayName);
		    APP.user.id = user.id;
		    Ti.API.info('after Login in success APP.user.id = '+ APP.user.id);
		    Ti.App.Properties.setString('uid',user.id);
		    APP.user.sessionID = e.meta.session_id;
		    Ti.App.Properties.setString('sessionID', e.meta.session_id);
		    Ti.API.info('session id:  '+e.meta.session_id);
		    APP.user.email = user.email;
		    Ti.App.Properties.setString('email', user.email);
			if(callback){
				callback({success:true});
			}
		} 
		else {
	   		alert('Error:\\n' + ((e.error && e.message) || JSON.stringify(e)));
	    }
	});
};

exports.updateUser = function(params, callback){
	Cloud.Users.update({
		username: params.username,
		custom_fields: {"displayName": params.username}
	}, function(e){
		//Ti.API.info(JSON.stringify(e));
		var thisUser = e.users[0];
		if(e.success){
			Ti.API.info("displayName:  "+thisUser.custom_fields.displayName);
			Ti.App.Properties.setString("uname", thisUser.custom_fields.displayName);
			APP.user.uname = thisUser.displayName;
			if(callback)
				callback({success:true});
		}
		else{
			 alert('Error:\n' + ((e.error && e.message) || JSON.stringify(e)));
		}
	});
};

exports.alreadyExit = function (params, callback){

        if (!params.search.value.length) {
            params.search.focus();
            return;
        }
       
        Cloud.Users.search({
                q: params.search.value
            }, function (e) {
               // button.show();
                if (e.success) {
                    if (e.users.length == 0) {
       					  	//params.pwdTxt.blur();
							  	//params.pwdTxt.hintText ="Create A Password";
							  //$.pwdTxt.enabled = true;
							  	//params.loginBtn.hide();
							  	
							    // params.pwdTxt.addEventListener('return',function(e){
							    // params.loginTabGroup.animate({
										 // bottom:0,
										// //right: 0,
								        // //left: 0,
								         // //curve:Ti.UI.ANIMATION_CURVE_EASE_OUT,
								         // duration: 1000
// 										
									// });  //APP.loginTabGroup.animate
// 							  		
							  	// });//$.pwdTxt return
							  	
							 // 	}	// if condition 
							
                    	/////   
                    	callback({exists:false});
                        
                    }
                    else {
                    	
                    	///alert(e.users[0].username);
                    	callback({exists: true});
                    	//return; //e.users[0].username;
                    	
                    }
                }
                else {
                	
                    alert(error(e));
                }
            }
        );
   
     };
	 


exports.showMe = function(callback){
	Cloud.Users.showMe(//{
		//session_id: APP.user.sessionID
	//}, 
	function (e) {
	    if (e.success) {
	        var user = e.users[0];
	        alert('Success:\\n' +
	            'id: ' + user.id + '\\n' +
	            'first name: ' + user.first_name + '\\n' +
	            'last name: ' + user.last_name);
	    } else {
	    	APP.user.isLoggedIn=false;
	        // alert('Error Login NOT persisted on ACS:\\n' +
	            // ((e.error && e.message) || JSON.stringify(e)));
	    }
	    callback();
	});
};

exports.logout = function(callback){
	Cloud.Users.logout(function(e){
		if (e.success) {
        	alert('Success: Logged out');
        	Cloud.sessionId = null;
        	Ti.App.Properties.setString('sessionID',null);
        	APP.user.uname = null;
	        Ti.App.Properties.setString('uname', null);
	        APP.user.id = null;
	        Ti.App.Properties.setString('uid',null);
	        APP.user.sessionID = null;
	       	APP.user.email = null;
	       	Ti.App.Properties.setString('email', null);
	       	APP.user.uname = null;
        	if(callback)
        	{
        		callback();
        	}
        	
    	} else {
        	alert('Error:/n' +
            ((e.error && e.message) || JSON.stringify(e)));
    	}
	});
};

exports.getOtherUser = function (id,obj){
	       
		Cloud.Users.show({
        user_id:id,
    }, function (e) {
       
        if (e.success) {
           
           //alert( e.users[0].first_name);
       obj.text =  e.users[0].first_name;
           
           //return this;
        }
        else {
            error(e);
        }
    });
    
	
	
};

exports.getOtherPeople = function (id,callback){
	       
		Cloud.Users.query({
		 per_page:10,
		 //limit:3
         //user_id:id
    }, function (e) {
       
        if (e.success) {
           callback(e.users);
      
      //alert( e.users[0].first_name);
      // alert(e.users[1].first_name);
           
           //return this;
        }
        else {
            error(e);
        }
    });
    
};

exports.getPlace = function(_lon,_lat,callback){
	
	 Cloud.Places.query({
	 	   order:'-created_at',
           //per_page:10,
           // search near user's coords and distance of 30 miles calculated by dividing by 3959
           where:{ lnglat:{"$nearSphere":[_lon,_lat],"$maxDistance":0.00026}} //  (0.00075)}} ,"$maxDistance":0.00026}
	 	},function (e) {
            Ti.API.info(JSON.stringify(e));
            Ti.API.info("e.success:   " + e.success);
            if (e.success) {
                if (e.places.length == 0) {
                  
                }
                else {
                    
                    callback(e);
                    
                }
            }
            else {
                error(e);
            }
        });
};

exports.saveMention = function(params, callback){
	
	Ti.API.info('sessionID from saveMention Fn:  '+APP.user.sessionID);
	Ti.API.info('session ID from hasStoredSession: '+Cloud.sessionId);
		Cloud.Objects.create({
		classname: 'mentions',
		fields: {
			mentionTxt: params.mentionTxt,
			toUID: params.toUID,
			fromUID: params.fromUID,
			placeID:params.placeID,
			type:params.type,
			//coordinates: [params.lng,params.lat]
		}},function(e) {
			
		    if (e.success) {
		    	
		        var mention = e.mentions[0];
		        Ti.API.info('Success:\\n' +
		           'id: ' + mention.id + '\\n' +
		           'mentionTxt: ' + mention.mentionTxt + '\\n' +
		           'toUID: ' + mention.toUID + '\\n' +
		           'fromUID: ' + mention.fromUID + '\\n' +
		           'placeID: ' + mention.palceID); 
		              
		    } else {
		        alert('Error:\\n' +
		            ((e.error && e.message) || JSON.stringify(e)));
		   }
		   callback();
	});
};

exports.updateFname = function(param,callback){
	
	Cloud.Users.update({
           first_name:param.fname,
       //     email: email.value,
            //password: $.upass.value,
            //password_confirmation: $.c_pwdTxt.value,
       	}, function (e) {
	    if (e.success) {
	        var user  = e.users[0];
	        APP.user.uname = user.first_name;
	        Ti.App.Properties.setString('uname', user.first_name);
	        alert('Update Success you name is :'+user.first_name);
	           
	    } else {
	    	
	        alert('Error:\\n' +
	            ((e.error && e.message) || JSON.stringify(e)));
	            
	    }
	    callback();
	    });
	    
	
};

exports.getPosts = function(_lon,_lat, pagenum, callback){
	var maxDistance = 1/3959; // get posts within 1 mile
	Cloud.Posts.query({
		order: '-created_at',
		page: pagenum || 1,
		per_page: 20,
		where:{ coordinates:{"$nearSphere":[_lon,_lat],"$maxDistance":maxDistance}} // ,"$maxDistance":0.00075 ,8072/ "$nearSphere":
	}, function(e){
		 if (e.success) {
                //var objects = e[objType];
                if (e.posts.length == 0) {
                    alert('No post found!');
                }
                else {
                    //for (var i = 0; i < objects.length; i++) {
                      //  (function (i) {
                          Ti.API.info("All post result = "+JSON.stringify(e.posts));
                      
                          callback({
                          	posts: e.posts,
                          	totalPages: e.meta.total_pages
                          });	
                     
                }
            }
            else {
                error(e);
            }
	});
};

exports.getPostPhoto = function(param, callback){
	Cloud.Photos.query({
		where:{
			id: param.id
		}
	}, function(e){
		if(e.success){
			Ti.API.info("getPostPhoto returns:  \n"+JSON.stringify(e));
			callback({photo: e.photos[0].urls.medium_500});
		}
		else{
			alert('Error:/n' +
            ((e.error && e.message) || JSON.stringify(e)));
		}
	});
};
exports.savePost = function(param, callback){
	LOCATION.getCoords(function(e){
		if(param.photo)	{
			Cloud.Posts.create({
				content: "pic",
				//title: param.title,
				//type:param.type,
				photo: param.photo,
				custom_fields: {
					coordinates: [param.lng,param.lat]
				}	
			//coordinates: [param.lng,param.lat]
			}, function(e){
				alert(JSON.stringify(e));
				//alert('Post Saved. PostID is: '+e.posts[0].id);
				callback();
			});
		}
		else{
			Cloud.Posts.create({
				content: param.content,
				//title: param.title,
				//type:param.type,
				//photo: param.photo,
				custom_fields: {
					coordinates: [param.lng,param.lat]
				}	
			//coordinates: [param.lng,param.lat]
			}, function(e){
				alert("TEXT:  \n"+JSON.stringify(e));
				alert('Post Saved. PostID is: '+e.posts[0].id);
				callback();
			});
		}
	});
};
//0.00075776711

exports.getMentions = function(objType,_lon,_lat,placeID,callback){
	
	// var val = 'mentions';
		//var maxRadians = 3/3959;
        Cloud.Objects.query({
            classname: objType,
            order:'-created_at',
            per_page:20,
            where:{type:"public",placeID:placeID}
           // where:{"type":"public",coordinates:{"$nearSphere":[_lon,_lat],"$maxDistance":0.00075}} // ,"$maxDistance":0.00075 ,8072/ "$nearSphere":"placeID":placeID
         }, function (e) {
         	
            if (e.success) {
                var objects = e[objType];
                if (!objects.length) {
                    alert('No objects found!');
                }
                else {
                    //for (var i = 0; i < objects.length; i++) {
                      //  (function (i) {
                      //	alert(placeID);
                          Ti.API.info("All mentions result = "+JSON.stringify(objects));
                      
                          callback(objects);	
                           
                         
                       /*  alert(' mention :'+ objects[i].mentionTxt
                                    +' toUID :'+ objects[i].toUID +
                                    '  fromUID :'+objects[i].fromUID+
                                    '  id :' +objects[i].id +'  created_at :'+objects[i].created_at +'   updated_at :'+ objects[i].updated_at+
                                    '  user :'+objects[i].user.id +' first_name :'+ objects[i].user.first_name +'  last_name :'+ objects[i].user.last_name ); */
                        	
                        	//  '  cordinates :['+objects[i].coordinates[0]+','+ objects[i].coordinates[1] +']'+
                            //mentionTxt toUID fromUID coordinates id created_at updated_at user
                           // enumerateProperties(wrapper, objects[i], 20);
                            //wrapper.addEventListener('click', function () {
                              //  handleOpenWindow({ target: 'Update Object', id: objects[i].id, classname: val });
                            //});
                            //content.add(wrapper);
                        //})(i);
                    //break;
                    //}
                }
            }
            else {
                error(e);
            }
        });
	
	
};

exports.getMyMentions = function(id,val,_lon,_lat,place_id,callback){
	
	// var val = 'mentions';
        Cloud.Objects.query({
            classname: val,
             per_page:10,
             order:'-created_at',
             where:{ "toUID":id,"type":"public",placeID:place_id}  //coordinates:{"$nearSphere":[_lon,_lat],"$maxDistance":0.00075}
           // where:{"toUID":id,"type":"public",coordinates:{"$nearSphere":[_lon,_lat]},
            
            //},  // ,"$maxDistance":0.00075 ) ,8072// lnglat
            
           
         }, function (e) {
            if (e.success) {
                var objects = e[val];
                if (!objects.length) {
                  //  alert('No objects found!');
                }
                else {
                 
                 Ti.API.info("Get my mentions = "+JSON.stringify(objects));
                      
                          callback(objects);	
                           
                       
                }
            }
            else {
                error(e);
            }
        });
	
	
};

exports.getMyPrivates = function(id,objType,_lon,_lat,placeID,callback){
	
	// var val = 'mentions';
        Cloud.Objects.query({
            classname: objType,
          
            per_page:10,
            order:'-created_at',
           // where:{"toUID":id,"type":"private",coordinates:{"$nearSphere":[_lon,_lat]},
            where:{toUID:id,type:"private",placeID:placeID} //coordinates:{"$nearSphere":[_lon,_lat],"$maxDistance":0.00075}
           //  },  // ,"$maxDistance":0.00075 ) ,8072// lnglat
          
         }, function (e) {
            if (e.success) {
                var objects = e[objType];
                if (!objects.length) {
                  //  alert('No objects found!');
                }
                else {
                 
                 Ti.API.info("Get my privates = "+JSON.stringify(objects));
                      
                          callback(objects);	
                           
                       
                }
            }
            else {
                error(e);
            }
        });
	
	
};


 exports.currentUserMention = function(val,id,clb){
  	  
        Cloud.Objects.query({
            classname: val,
           where:{ 
			toUID:id,
			}
		}, function (e) {
            if (e.success) {
                var objects = e[val];
                if (!objects.length) {
                   // alert('No objects found!');
                }
                else {
                	
                // Ti.API.info("currnet result = "+ len);
                         
                     clb = objects.length;
                    
                }
            }
            else {
                error(e);
            }
        });
	
  	//return  len;
  };

exports.Checkin = function(id,param, callback){
	
	 Cloud.Checkins.create({
	 	place_id:id,
	 	custom_fields:{
	 		'checked_out':false
	 	}
	 }, function (e) {
                //evt.row.title = oldTitle;
        if (e.success) {
        	Ti.API.info("Checkin retured CALLBACK:  " + JSON.stringify(e));
                	//if(param){
        	var str = e.checkins[0].place.created_at;
        	APP.user.checkin.id = e.checkins[0].id;
        	APP.user.checkin.placeID = e.checkins[0].place.id;
        	APP.user.checkin.placeName = e.checkins[0].place.name;
        	Ti.App.Properties.setString('placeID', e.checkins[0].place.id);
        	Ti.App.Properties.setString('checkInID',e.checkins[0].id);
        	Ti.App.Properties.setString('timeAppeared', str.substr(11,8));
        	Ti.App.Properties.setString('placeName', e.checkins[0].place.name);
        	//param.appear.text = APP.user.timeAppeared = str.substr(11,8);
        	//param.location.text = APP.user.placeName = e.checkins[0].place.name;
        	LOCATION.addLocationListener();
        	callback(e);
			      // }else{
// 			      	
			      // if(APP.user.placeName){
			      	// param.appear.text = APP.user.timeAppeared;
			      	// param.appear.text = APP.user.placeName;
			      // }
			      //APP.user.timeAppeared = e.checkins[0].place.created_at.substr(11,8); 
			      //APP.user.placeName = e.checkins[0].place.name;
			      
			      //}
		}
        else {
        	callback(e);
        }
	});
};

exports.getCheckin = function(id,param){
    var that = this;
	Cloud.Checkins.query({
		where:{user_id:id},
		order:'-created_at',
		per_page:1,
		limit:1,
        //checkin_id: evt.id
    }, function (e) {
      
        if (e.checkins[0]) {
        	
            if(param){
                		
             var str = e.checkins[0].place.created_at;
                 (param.appear)? param.appear.text = str.substr(11,8) :'';
                 param.location.text = e.checkins[0].place.name;
				     
			      }else{
			      	
			       APP.user.checkin.id	 = e.checkins[0].id;
			       APP.user.timeAppeared = e.checkins[0].place.created_at.substr(11,8); 
			       APP.user.checkin.placeName = e.checkins[0].place.name;
			       APP.user.checkin.placeID = e.checkins[0].place.id;
			      
			      }
                	
                   // alert('Checked in to !'+e.checkins[0].place.name +" : "+e.checkins[0].place.created_at);
                }
                else {
                   // e.error(e);
                }
                
    });

	
};

exports.getloction = function(id,callback){
   
 Cloud.Checkins.query({
	
		order:'-created_at',
		per_page:1,
		limit:1,
	    where:{user_id:id},
    },function (e) {
   
        if (e.checkins[0]) {
          Ti.API.info("Getlocation  = "+JSON.stringify(e.checkins[0]));
          
          callback(e.checkins[0]);
            
             }
                else {
                	
                   // e.error(e);
             }
                
    });
	
};



exports.ottieniVia = function (latitude,longitude,_cb){
 	  //var places = '';
    
    Titanium.Geolocation.reverseGeocoder(latitude,longitude,function(evt)
        {
               //address = JSON.stringify(evt);
            Ti.API.info("reverse geolocation result = "+JSON.stringify(evt));
            
            _cb(evt);
            
          //places = evt;  
           //Ti.API.info(places.places.street);
           //Ti.API.info(places.places[0].street);
          
          //  _cb(evt);
        
   });
    
    //return places; 
 
  };
  
   
 exports.uploadPic = function(param,callback){
 	   
 	  Cloud.Photos.create({
            photo:param.photo,
            //collection_id: collectionID,
            'photo_sync_sizes[]': 'small_75'
        }, function (e) {
            //Cloud.onsendstream = Cloud.ondatastream = null;
            if (e.success) {
            	Ti.API.info("upload image result = "+JSON.stringify(e));
             var photos = e.photos[0];
            if(callback){
    	 
    	    callback(photos);	
    		
    	}
               // alert('Success:\n' +
            // 'id: ' + photos.id + '\n' +
             // 'urls :'+photos.urls.original+'\n'+
            // 'filename: ' + photos.filename + '\n' +
            // 'size: ' + photos.size,
            // 'updated_at: ' + photos.updated_at);
// //             
                photo = null;
              //  collectionID = null;
            //    alert('Uploaded!');
            }
            else {
                error(e);
            }
        });
 	
 };
 
 exports.getProfilePic = function(id,callback){
        
    Cloud.Photos.query({
    	per_page:1,
    	where:{user_id:id},
    	order:'-created_at',
    	//limit:1,
        //page: 1,
        
    // where: {
        // coordinates: {
            // '$nearSphere': [-122.23,37.12],
            // '$maxDistance': 0.00126
        // }
    // }
}, function (e) {
    if (e.success) {
    
     //Ti.API.info("get picture  result = "+JSON.stringify(e));
    
    	var photo = e.photos[0];
    	if(callback){
    	 
    	    callback(photo);	
    		
    	}else{
    		
             APP.user.pic = photo.urls.square_75; 
             
    	}
    	
        // alert('Success:\n' +
            // 'Count: ' + e.photos.length);
        // for (var i = 0; i < e.photos.length; i++) {
            // var photo = e.photos[i];
            // alert('id: ' + photo.id + '\n' +
                  // 'name: ' + photo.user.first_name + '\n' +
                  // 'urls :'+photo.urls.square_75+'\n'+
                  // 'filename: ' + photo.filename + '\n' +
                  // 'updated_at: ' + photo.updated_at);
       // }
    } else {
        alert('Error:\n' +
            ((e.error && e.message) || JSON.stringify(e)));
    }
}); 	
 	
 	
 };
 
 
exports.getAppears = function(id,callback){
 	
 	Cloud.Checkins.query({
    	per_page:1000,
    	where:{user_id:id},
    	order:'-created_at',
    	
},function (e) {
            if (e.success) {
                if (e.checkins.length == 0) {
                
                }
                else {
                 callback(e.checkins);
                 Ti.API.info("Get Appears Arounds ="+JSON.stringify(e));
                 
                }
            
            }
            else {
    
                error(e);
    
            }
        });
    
    //});
 	
 	
 };
 
 exports.getParticularAppears = function(id,placeID,callback){
 	
 	Cloud.Checkins.query({
    	per_page:1000,
    	where:{user_id:id,place_id:placeID},
    	order:'-created_at',
    	
},function (e) {
            if (e.success) {
                if (e.checkins.length == 0) {
                
                }
                else {
                	
                 callback(e.checkins);
                 Ti.API.info("Get particular appears ="+JSON.stringify(e));
                 
                }
            
            }
            else {
    
                error(e);
    
            }
        });
    
    //});
 	
 	
 };
 
 exports.checkAppearance = function(_lon,_lat,callback){
	
	 Cloud.Places.query({
	 	   //order:'-created_at',
           per_page:1,
           // search near user's coords and distance of 30 miles calculated by dividing by 3959
           where:{ lnglat:{"$nearSphere":[_lon,_lat],"$maxDistance":0.00026}} //  (0.00075)}} ,"$maxDistance":0.00026}
	 	},function (e) {
            Ti.API.info('checkAppearance :'+ JSON.stringify(e));
          //Ti.API.info("lnglat:   " + _lon,_lat);
            if (e.success) {
                if (e.places.length == 0) {
                  
                }
                else {
                    
                    callback(e.places[0]);
                    
                }
            }
            else {
                //error(e);
            }
        });
 	
 };
 
 
 exports.getPlaces = function(callback){
	
	Ti.API.info('getPlaceAround 1 :'+ APP.coordinates.lng +" "+ APP.coordinates.lat);
	var data = Here.services_queryUpdatePlaces({
 		//placeID: APP.user.placeID,
 		//classname: 'mentions',
 		lng: APP.coordinates.lng,
 		lat: APP.coordinates.lat,
 		maxDistance: APP.config.maxDistance
 	}, function(data){
 		Ti.API.info("Response from ACSNode:  " + JSON.stringify(data));	
 		callback(data);
 		
 	});
	
	 // Cloud.Places.query({
	 	   // //order:'-created_at',
           // per_page:20,
           // // search near user's coords and distance of 30 miles calculated by dividing by 3959
           // where:{ lnglat:{"$nearSphere":[APP.coordinates.lng,APP.coordinates.lat],"$maxDistance":0.00252}} //  (0.00075)}} ,"$maxDistance":0.00026}
	 	// },function (e) {
            // Ti.API.info('getPlaceWithInTenMilesAround 1 :'+ JSON.stringify(e));
          // //Ti.API.info("lnglat:   " + _lon,_lat);
            // if (e.success) {
                // if (e.places.length == 0) {
//                   
                // }
                // else {
                    // Ti.API.info('getPlaceWithInTenMilesAround  :'+ JSON.stringify(e.places));
                    // callback(e.places);
//                     
                // }
            // }
            // else {
                // //error(e);
            // }
        // });
 	
 };
 
exports.checkIfAlreadyMentioned = function(val,id,callback){
	
		
	 Cloud.Objects.query({
            classname: val,
           where:{ 
			toUID:id,
			}
		}, function (e) {
            if (e.success) {
                var objects = e[val];
                if (!objects.length) {
                	
                 callback('Inactive');
              
                }
                else {
              
                 callback('Active');
                    
                }
            }
            else {
                error(e);
            }
        });
	
	
	
}; 
 
exports.isResponded = function(val,fromUID,toUID,callback){
         
      Cloud.Objects.query({
            classname:val,
            where:{fromUID:fromUID,toUID:toUID}
		}, function (e) {
            if (e.success) {
                var objects = e[val];
                if (!objects.length) {
                	
                    callback('noReply');
              
                }
                else {
              
                   callback('replied');
                    
                }
            }
            else {
                error(e);
            }
        });
	
	
	
};
 
 exports.prettyDate = function(date_str){
 	
	var time_formats = [
	[60, 'just now', 1], // 60
	[120, '1 minute ago', '1 minute from now'], // 60*2
	[3600, 'minutes', 60], // 60*60, 60
	[7200, '1 hour ago', '1 hour from now'], // 60*60*2
	[86400, 'hours', 3600], // 60*60*24, 60*60
	[172800, 'yesterday', 'tomorrow'], // 60*60*24*2
	[604800, 'days', 86400], // 60*60*24*7, 60*60*24
	[1209600, 'last week', 'next week'], // 60*60*24*7*4*2
	[2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7
	[4838400, 'last month', 'next month'], // 60*60*24*7*4*2
	[29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4
	[58060800, 'last year', 'next year'], // 60*60*24*7*4*12*2
	[2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12
	[5806080000, 'last century', 'next century'], // 60*60*24*7*4*12*100*2
	[58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100
	];
	var time = ('' + date_str).replace(/-/g,"/").replace(/[TZ]/g," ").replace(/^\s\s*/, '').replace(/\s\s*$/, '');
	if(time.substr(time.length-4,1)==".") time =time.substr(0,time.length-4);
	var seconds = (new Date - new Date(time)) / 1000;
	var token = 'ago', list_choice = 1;
	if (seconds < 0) {
		seconds = Math.abs(seconds);
		token = 'from now';
		list_choice = 2;
	}
	var i = 0, format;
	while (format = time_formats[i++]) 
		if (seconds < format[0]) {
			if (typeof format[2] == 'string')
				return format[list_choice];
			else
				return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;
		}
	return time;
};
  
exports.alertNewPost = function(){
	
	
	
	
	
};  
  
  
  
  exports.timeDifference = function (current, previous) {

    var msPerMinute = 60 * 1000;
    var msPerHour = msPerMinute * 60;
    var msPerDay = msPerHour * 24;
    var msPerMonth = msPerDay * 30;
    var msPerYear = msPerDay * 365;

    var elapsed = current - previous;

    if (elapsed < msPerMinute) {
         return Math.round(elapsed/1000) + ' sec';   
    }

    else if (elapsed < msPerHour) {
         return Math.round(elapsed/msPerMinute) + ' m';   
    }

    else if (elapsed < msPerDay ) {
         return Math.round(elapsed/msPerHour ) + ' h';   
    }

    else if (elapsed < msPerMonth) {
        return Math.round(elapsed/msPerDay) + ' d';   
    }

    else if (elapsed < msPerYear) {
        return  Math.round(elapsed/msPerMonth) + ' month';   
    }

    else {
        return  Math.round(elapsed/msPerYear ) + ' y';   
    }
}  ;
  
  // i found it in google and it works very well
  
  exports.distance = function (lat1,lon1,lat2,lon2)  {
  	
            var R = 3959;//this mile radius //6371; // km (change this constant to get miles)
            var dLat = (lat2-lat1) * Math.PI / 180;
            var dLon = (lon2-lon1) * Math.PI / 180;
            var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
                Math.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) *
                Math.sin(dLon/2) * Math.sin(dLon/2);
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
            var d = R * c;
            if (d>1) return Math.round(d);//+"km";
            else if (d<=1) return Math.round(d*1000)+"mi";
            return d;
        };
        
 exports.getAllUpdates = function(callback){
 	Ti.API.info("placeID: "+APP.user.placeID);
 	Ti.API.info("lng: " + APP.coordinates.lng);
 	Ti.API.info("lat: " + APP.coordinates.lat);
 	var data = Here.services_getHomeScreenData({
 		placeID: APP.user.placeID,
 		classname: 'mentions',
 		lng: APP.coordinates.lng,
 		lat: APP.coordinates.lat,
 		maxDistance: APP.config.maxDistance
 	}, function(data){
 		Ti.API.info("Response from ACSNode:  " + JSON.stringify(data));	
 		callback(data);
 		
 	});
 	
 };   
 
 exports.init = function(callback){
 	Cloud.Objects.query({
        classname: "AppParams",
        order:'-created_at',
        per_page:20
        // where:{"type":"public",coordinates:{"$nearSphere":[_lon,_lat],"$maxDistance":0.00075}} // ,"$maxDistance":0.00075 ,8072/ "$nearSphere":"placeID":placeID
     }, function (e) {
     	Ti.API.info('AppParams Full Response: '+ JSON.stringify(e));
     	// Ti.API.info('ACSINIT maxDistance:  ' + e.AppParams[0].maxDistance);
     	// APP.config.maxDistance = e.AppParams[0].maxDistance;
     	// Ti.App.Properties.setDouble('maxDistance',APP.config.maxDistance);
     });
 };
 
 exports.getTips = function(callback){
 	Cloud.Objects.query({
 		classname: "tips",
 	}, function(e){
 		Ti.API.info("TIPS:  "+JSON.stringify(e.tips[0]));
 		callback(e.tips[0]);
 	});
 };
  
exports.login = login;

